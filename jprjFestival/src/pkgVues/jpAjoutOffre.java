/*
 * fichier de declaration de la vue Create offre
 */

package pkgVues;

import java.util.Iterator;
import javax.swing.JOptionPane;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Transaction;
import pkgEntite.Etablissement;
import pkgEntite.Offre;
import pkgEntite.OffreId;
import pkgEntite.Typechambre;
import pkgFestival.jfrMenu;

/**
 *  class de gestion de l'ajout (create) des offre
 * @author benoit
 */
public class jpAjoutOffre extends javax.swing.JPanel {

    /**
     * Creates new form jpAjoutOffre
     */
    public jpAjoutOffre() {
        initComponents();
        _chargerListeEtab();
        _chargerListeType();
    }
    
    	
        /**
         * charge la liste des Etablissements
         */
    private void _chargerListeEtab() {
        lstEtab.removeAllItems();
        lstEtab.addItem("");
        try{
            //On charge la liste des établissements
            String sReq = "FROM Etablissement";

            jfrMenu.getSession().beginTransaction();
            Query q = jfrMenu.getSession().createQuery(sReq);
            Iterator etab = q.iterate();

            while(etab.hasNext())
            {
                Etablissement unEtablissement = (Etablissement) etab.next();
                 lstEtab.addItem(unEtablissement.getEtaNom());
            }
        }
        catch(HibernateException e){
            JOptionPane.showMessageDialog(null, "Impossible de charger les établissements !", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
        
        /**
         * charge la liste des types de chambre
         */
    private void _chargerListeType() {
        lstType.removeAllItems();
        lstType.addItem("");
        try{
            //On charge la liste des établissements
            String sReq = "FROM Typechambre";

            jfrMenu.getSession().beginTransaction();
            Query q = jfrMenu.getSession().createQuery(sReq);
            Iterator type = q.iterate();

            while(type.hasNext())
            {
                Typechambre unType = (Typechambre) type.next();
                 lstType.addItem(unType.getTchId());
            }
        }
        catch(HibernateException e){
            JOptionPane.showMessageDialog(null, "Impossible de charger les Type de chambre !", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lstEtab = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        lblType = new javax.swing.JLabel();
        lblCapacite = new javax.swing.JLabel();
        lblQuantite = new javax.swing.JLabel();
        txtCapacite = new javax.swing.JTextField();
        txtNbChamb = new javax.swing.JTextField();
        jbtSubmit = new javax.swing.JButton();
        lstType = new javax.swing.JComboBox();

        jLabel1.setText("Nouvelle Offre");

        jLabel2.setText("Etablissement :");

        lblType.setText("Type");

        lblCapacite.setText("Capacité");

        lblQuantite.setText("Quantité");

        jbtSubmit.setText("Ajouter");
        jbtSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtSubmitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lstEtab, 0, 376, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCapacite)
                                    .addComponent(lblType)
                                    .addComponent(lblQuantite))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNbChamb)
                                    .addComponent(txtCapacite)
                                    .addComponent(lstType, 0, 200, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtSubmit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(lstEtab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(lstType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCapacite)
                    .addComponent(txtCapacite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantite)
                    .addComponent(txtNbChamb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtSubmit)
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * si on clique sur submit, on valide l'ajout
     * @param evt 
     */
    private void jbtSubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtSubmitMouseClicked
        // on trouve l'id de l'etab
        if(!lstEtab.getSelectedItem().toString().equals(""))
        {
            try{
                // on charge l'id de l'etablissement
                String sReqEtab = "FROM Etablissement WHERE Eta_Nom = :etabNom";

                Query qEtab = jfrMenu.getSession().createQuery(sReqEtab);
                qEtab.setString("etabNom", lstEtab.getSelectedItem().toString());
                
                Etablissement unEtablissement = (Etablissement) qEtab.uniqueResult();

                if (
                        txtCapacite.getText() != null
                        && txtNbChamb.getText() != null
                        && lstType.getSelectedItem().toString() != null
                        )
                {
                    try
                    {
                        // on charge l'id de l'etablissement
                        String sReqType = "FROM Typechambre WHERE TCh_Id = :typeId";

                        Query qType = jfrMenu.getSession().createQuery(sReqType);
                        qType.setString("typeId", lstType.getSelectedItem().toString());

                        Typechambre unType = (Typechambre) qType.uniqueResult();
                        
                        try
                        {
                            // on cree l'offre ID
                            OffreId uneOffreId = new OffreId(unEtablissement.getEtaId(), unType.getTchId());
                            // puis une offre
                            Offre uneOffre = new Offre();
                            
                            uneOffre.setId(uneOffreId);
                            uneOffre.setEtablissement(unEtablissement);
                            uneOffre.setTypechambre(unType);

                            Integer nCapacite = Integer.parseInt(txtCapacite.getText());
                            uneOffre.setOffCapacite(nCapacite.byteValue());

                            Integer nNbChamb = Integer.parseInt(txtNbChamb.getText());
                            uneOffre.setOffNbchambres(nNbChamb.byteValue());

                            // on lance la sauvegarde
                            Transaction tx = jfrMenu.getSession().beginTransaction();
                            jfrMenu.getSession().save(uneOffre);
                            tx.commit();
                            // on vide les champs
                            lstType.setSelectedItem("");
                            txtCapacite.setText("");
                            txtNbChamb.setText("");

                            JOptionPane.showMessageDialog(null, "Ajout bien effectuée !", "Inforamtion", JOptionPane.INFORMATION_MESSAGE);
                        }
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, "Erreur lors de l'ajout !", "Erreur", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    catch(Exception e){
                        JOptionPane.showMessageDialog(null, "Impossible de charger le Type de chambre !", "Erreur", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Merci de remplir les champs !", "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            }
            catch(HibernateException e){
                JOptionPane.showMessageDialog(null, "Impossible de charger l'établissement !", "Erreur", JOptionPane.ERROR_MESSAGE);
                
            }
        }
    }//GEN-LAST:event_jbtSubmitMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton jbtSubmit;
    private javax.swing.JLabel lblCapacite;
    private javax.swing.JLabel lblQuantite;
    private javax.swing.JLabel lblType;
    private javax.swing.JComboBox lstEtab;
    private javax.swing.JComboBox lstType;
    private javax.swing.JTextField txtCapacite;
    private javax.swing.JTextField txtNbChamb;
    // End of variables declaration//GEN-END:variables
}
